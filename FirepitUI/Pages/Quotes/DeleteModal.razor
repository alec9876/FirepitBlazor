@inject IQuoteRepository _repo
@inject NavigationManager   _navMan
@inject IToastService _toast

<h3>Are you sure you want to delete this quote?</h3>

<button @onclick="DeleteQuote" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Yes
</button>
<button @onclick="BlazoredModal.Cancel" class="btn btn-dark">No</button>
@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public int QuoteId { get; set; }
    Quotes Quotes = new Quotes();

    private bool isSuccess = true;

    protected async override Task OnInitializedAsync()
    {
        Quotes = await _repo.Get(Endpoints.QuoteEndpoint, QuoteId);
    }

    private async Task DeleteQuote()
    {
        isSuccess = await _repo.Delete(Endpoints.QuoteEndpoint, Quotes.Id);
        if (isSuccess)
        {
            _toast.ShowSuccess("Quote Deleted", "");
            BackToList();
        }
        else
        {
            _toast.ShowError("Quote Deletion Failed", "");
            BackToList();
        }
    }

    private void BackToList()
    {
        _navMan.NavigateTo("/quotes/", true);
    }


}
