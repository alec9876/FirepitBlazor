@page "/Register"

@using FirepitUI.Models
@using FirepitUI.Repository.Interface

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan


<h3 class="card-title">Register Now</h3>
@if (!response)
{
    <ErrorMessage Message="Something went wrong with the registration attempt" />
}
<div class="card-body">
    <EditForm Model="Model" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="firstName">First Name:</label>
            <InputText Id="firstName" class="form-control" @bind-Value="Model.FirstName" />
            <ValidationMessage For="@(() => Model.FirstName)" />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name:</label>
            <InputText Id="lastName" class="form-control" @bind-Value="Model.LastName" />
            <ValidationMessage For="@(() => Model.LastName)" />
        </div>
        <div class="form-group">
            <label for="goesBy">Goes By:</label>
            <InputText Id="goesBy" class="form-control" @bind-Value="Model.GoesBy" />
            <ValidationMessage For="@(() => Model.GoesBy)" />
        </div>
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
            <ValidationMessage For="@(() => Model.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
            <ValidationMessage For="@(() => Model.Password)" />
        </div>
        <div class="form-group">
            <label for="confirmpassword">Confirm Password</label>
            <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="Model.ConfirmPassword" />
            <ValidationMessage For="@(() => Model.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Register</button>

    </EditForm>
</div>


@code {
    private RegistrationModel Model = new RegistrationModel();
    bool response = true;

    private async Task HandleRegistration()
    {
        response = await _authRepo.Register(Model);

        if (response)
        {
            _navMan.NavigateTo("/login");
        }
    }
}
